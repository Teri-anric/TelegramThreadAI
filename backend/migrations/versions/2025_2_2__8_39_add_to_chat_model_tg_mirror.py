"""add to chat model tg mirror

Revision ID: 6bb8ba3b2418
Revises: 3938793bf106
Create Date: 2025-02-02 08:39:56.887888

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "6bb8ba3b2418"
down_revision: Union[str, None] = "3938793bf106"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade the database."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "chat_messages",
        "created_at",
        existing_type=postgresql.TIMESTAMP(),
        type_=sa.DateTime(timezone=True),
        nullable=True,
        existing_server_default=sa.text("now()"),
    )
    # Add new enum value
    op.execute("ALTER TYPE chattype ADD VALUE 'mirrored_telegram'")
    op.add_column(
        "chats", sa.Column("telegram_chat_id", sa.BigInteger(), nullable=True)
    )
    op.create_index(
        op.f("ix_chats_telegram_chat_id"),
        "chats",
        ["telegram_chat_id"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade the database."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_chats_telegram_chat_id"), table_name="chats")
    op.drop_column("chats", "telegram_chat_id")
    # Note: PostgreSQL doesn't support removing enum values, so we leave the TELEGRAM value
    op.alter_column(
        "chat_messages",
        "created_at",
        existing_type=sa.DateTime(timezone=True),
        type_=postgresql.TIMESTAMP(),
        nullable=False,
        existing_server_default=sa.text("now()"),
    )
    # ### end Alembic commands ###
