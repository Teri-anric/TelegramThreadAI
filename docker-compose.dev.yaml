version: '3.8'

services:
  db:
    image: postgres:16.1
    env_file:
      - .env
    environment:
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD:-ttai_password}
      - POSTGRES_USER=${DATABASE_USER:-ttai_user}
      - POSTGRES_DB=${DATABASE_NAME:-ttai_db}
      - POSTGRES_PORT=${DATABASE_PORT:-5432}
    ports:
      - "${DATABASE_PORT:-5432}:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USER:-ttai_user} -d ${DATABASE_NAME:-ttai_db}"]
      interval: 5s
      timeout: 5s
      retries: 5
  
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile.dev
    env_file:
      - .env
    command: uvicorn app.web:app --host 0.0.0.0 --port 8000 --reload
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - /app/.venv  # Prevent host volume overwriting virtual environment
    depends_on:
      db:
        condition: service_healthy
    develop:
      watch:
        - action: sync
          path: ./backend
          target: /app
        - action: rebuild
          path: ./backend/requirements.txt
  
  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile.dev
    env_file:
      - .env
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    develop:
      watch:
        - action: sync
          path: ./frontend/src
          target: /app/src
        - action: rebuild
          path: ./frontend/package.json

volumes:
  pg_data: 